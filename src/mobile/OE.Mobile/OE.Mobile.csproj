<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<ProduceReferenceAssembly>true</ProduceReferenceAssembly>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<DebugType>portable</DebugType>
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Identity.Client" Version="4.25.0" />
		<PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
		<PackageReference Include="Prism.DryIoc.Forms" Version="8.0.0.1909" />
		<PackageReference Include="Refit" Version="5.2.4" />
		<PackageReference Include="Xamarin.CommunityToolkit" Version="1.0.1" />
		<PackageReference Include="Xamarin.Forms" Version="5.0.0.1874" />
		<PackageReference Include="Xamarin.Essentials" Version="1.6.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\shared\OE.Models.ActivityStreams\OE.Models.ActivityStreams.csproj" />
		<ProjectReference Include="..\..\shared\OE.Models\OE.Models.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Constants.g.cs">
			<DependentUpon>Constants.cs</DependentUpon>
		</Compile>
	</ItemGroup>

	<UsingTask TaskName="ReplaceSecrets" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<Files ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
			<TargetFileName ParameterType="System.String" Required="true" />
			<Placeholders ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
					if (Files.Length > 0 && !string.IsNullOrEmpty(TargetFileName))  
					{
						for (int i = 0; i < Files.Length; i++)  
						{
							ITaskItem item = Files[i];
							string path = item.GetMetadata("FullPath");
							if (TargetFileName.Equals(Path.GetFileName(path)))
							{
								string generatedPath = path.Replace(".cs", ".g.cs");
								string content = File.ReadAllText(path);
								
								string[] placeholders = Placeholders.Split(',');
								foreach(string placeholder in placeholders)
								{
									content = Regex.Replace(content, $"\\${placeholder}\\$", Environment.GetEnvironmentVariable(placeholder));
								}
								File.WriteAllText(generatedPath, content);
								Files[i] = new TaskItem(Path.GetFileName(generatedPath));

								return true;
							}
						}
					}
				]]>
			</Code>
		</Task>
	</UsingTask>

	<Target Name="PreBuild" BeforeTargets="CoreCompile">
		<ReplaceSecrets Files="@(Compile)" TargetFileName="Constants.cs" Placeholders="B2C_TENANTID,B2C_HOSTNAME,B2C_CLIENTID,B2C_SUSI_POLICY,XAM_MOBILE_APPID,XAM_ANDROID_SIGHASH" />
		<ItemGroup>
			<Compile Remove="Constants.cs" />
		</ItemGroup>
	</Target>

	<Target Name="PostBuild" AfterTargets="CoreCompile">
		<ItemGroup>
			<Compile Include="Constants.cs" />
			<Compile Remove="Constants.g.cs" />
		</ItemGroup>
	</Target>

</Project>